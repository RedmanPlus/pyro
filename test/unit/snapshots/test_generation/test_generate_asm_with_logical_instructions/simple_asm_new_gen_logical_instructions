section .text
global _start

_start:
    mov rax, 1
    push rax
    mov rax, 2
    push rax
    mov r8, QWORD [rbp + 8]
    mov r9, QWORD [rbp + 16]
    cmp r8, r9
    mov rcx, 0
    setl cl
    mov r8, rcx
    push r8
    mov r8, QWORD [rbp + 8]
    mov r9, QWORD [rbp + 16]
    cmp r8, r9
    mov rcx, 0
    setg cl
    mov r8, rcx
    push r8
    mov r8, QWORD [rbp + 24]
    mov r9, 1
    cmp r8, r9
    jne main_if_0
    push rbp
    mov rbp, rsp
    mov rdx, 0
    mov rax, 2
    mov rbx, QWORD [rbp - 32]
    mul rbx
    mov r8, rax
    mov QWORD [rbp - 32], r8
    jmp main_if_end_0
main_if_0:
    mov r8, QWORD [rbp - 8]
    mov r9, 1
    cmp r8, r9
    jne main_elif_0
    mov rdx, 0
    mov rax, 2
    mov rbx, QWORD [rbp - 24]
    mul rbx
    mov r8, rax
    mov QWORD [rbp - 24], r8
    jmp main_if_end_0
main_elif_0:
    mov rdx, 0
    mov rax, 2
    mov rbx, QWORD [rbp - 32]
    mul rbx
    mov r8, rax
    mov QWORD [rbp - 32], r8
    mov rdx, 0
    mov rax, 2
    mov rbx, QWORD [rbp - 24]
    mul rbx
    mov r8, rax
    mov QWORD [rbp - 24], r8
main_if_end_0:
    mov r8, QWORD [rbp - 32]
    mov r9, QWORD [rbp - 24]
    add r8, r9
    push r8
    mov rdx, 0
    mov rax, QWORD [rbp - 32]
    mov rbx, 2
    mul rbx
    mov r8, rax
    mov r9, QWORD [rbp - 24]
    add r8, r9
    push r8
    mov r8, QWORD [rbp + 0]
    mov r9, QWORD [rbp + 8]
    cmp r8, r9
    mov rcx, 0
    sete cl
    mov r8, rcx
    push r8
    mov r8, QWORD [rbp + 16]
    mov r9, 1
    cmp r8, r9
    jne main_if_end_0_1
    mov r8, 1
    mov r9, QWORD [rbp + 0]
    sub r8, r9
    mov QWORD [rbp + 0], r8
    jmp main_if_end_0_1
main_if_end_0_1:
    mov rax, 60
    mov rdi, 0
    syscall